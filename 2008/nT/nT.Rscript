nT <- read.table('data/nT.dat', header=TRUE)
attach(nT)
mean(nt25)
sd(nt25)
100*sd(nt25)/mean(nt25)
mean(nt2000)
sd(nt2000)
100*sd(nt2000)/mean(nt2000)
permanganate <- read.table('data/permanganate.dat', header=TRUE)
attach(permanganate)
permanganate_fit <- lm(Response ~ Concentration)
summary(permanganate_fit)
pct_permanganate_cr <- 100* (200 * permanganate_fit$coef[2]/ (200 - permanganate_fit$coef[1]))
round(pct_permanganate_cr,1)
postscript(file='images/permanganate.eps', paper="special", width=6.4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
par(mar=c(4,15,0,1),las=c(1))
plot(Concentration, Response, xlab="Permanganate concentration (ug/mL)", ylab="", xlim=c(0,6000), ylim=c(0,400), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
mtext("Nitrite test response (ug/mL)",side=2,adj=1,at=c(200),line=3)
axis(side=1,at=c(1000,2500,5000))
axis(side=2)
abline(permanganate_fit)
abline(h=c(200),lty=2)
dev.off()
detach(permanganate)
pcc <- read.table('data/pcc.dat', header=TRUE)
attach(pcc)
pcc_fit <- lm(Response ~ Concentration)
summary(pcc_fit)
pct_pcc_cr <- 100* (200 * pcc_fit$coef[2]/ (200 - pcc_fit$coef[1]))
round(pct_pcc_cr,1)
postscript(file='images/pcc.eps', paper="special", width=4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
par(mar=c(4,3,0,1),las=c(1))
plot(Concentration, Response, xlab="PCC concentration (ug/mL)", ylab="", xlim=c(0,1200), ylim=c(0,400), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
axis(side=1,at=c(200,500,1000))
axis(side=2)
abline(pcc_fit)
abline(h=c(200),lty=2)
dev.off()
detach(pcc)
dichromate <- read.table('data/dichromate.dat', header=TRUE)
attach(dichromate)
dichromate_fit <- lm(Response ~ Concentration)
summary(dichromate_fit)
pct_dichromate_cr <- 100* (200 * dichromate_fit$coef[2]/ (200 - dichromate_fit$coef[1]))
round(pct_dichromate_cr,1)
postscript(file='images/dichromate.eps', paper="special", width=4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
par(mar=c(4,3,0,1),las=c(1))
plot(Concentration, Response, xlab="Dichromate concentration (ug/mL)", ylab="", xlim=c(0,1200), ylim=c(0,400), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
axis(side=1,at=c(200,500,1000))
axis(side=2)
abline(dichromate_fit)
abline(h=c(200),lty=2)
dev.off()
detach(dichromate)
iodine <- read.table('data/iodine.dat', header=TRUE)
attach(iodine)
Concentration <- 1000 * Concentration
iodine_fit <- lm(Response ~ Concentration)
summary(iodine_fit)
pct_iodine_cr <- 100* (200 * iodine_fit$coef[2]/ (200 - iodine_fit$coef[1]))
round(pct_iodine_cr,1)
postscript(file='images/iodine.eps', paper="special", width=4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
par(mar=c(4,3,0,1),las=c(1))
plot(Concentration, Response, xlab="Iodine concentration (ug/mL)", ylab="", xlim=c(0,12000), ylim=c(0,400), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
axis(side=1)
axis(side=2)
abline(iodine_fit)
abline(h=c(200),lty=2)
dev.off()
detach(iodine)
rm(Concentration)
hypochlorite <- read.table('data/hypochlorite.dat', header=TRUE)
attach(hypochlorite)
naocl_mw <- 74.44
ocl_mw <- 51.45
Concentration <- 10000 * Concentration * ocl_mw / naocl_mw
Concentration
hypochlorite_fit <- lm(Response ~ Concentration)
summary(hypochlorite_fit)
pct_hypochlorite_cr <- 100* (200 * hypochlorite_fit$coef[2]/ (200 - hypochlorite_fit$coef[1]))
round(pct_hypochlorite_cr,1)
postscript(file='images/hypochlorite.eps', paper="special", width=4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
par(mar=c(4,3,0,1),las=c(1))
plot(Concentration, Response, xlab="Hypochlorite concentration (ug/mL)", ylab="", xlim=c(0,14000), ylim=c(0,4000), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
axis(side=1)
axis(side=2)
abline(hypochlorite_fit)
abline(h=c(200),lty=2)
dev.off()
detach(hypochlorite)
rm(Concentration)
co_dat <- read.table("data/carryover.dat")
normal_samples <- c(co_dat[2:3,1], co_dat[10:12,1])
co_samples <- c(co_dat[6,1], co_dat[9,1], co_dat[15,1], co_dat[18,1], co_dat[21,1])
pct_carryover <- 100*(mean(co_samples) - mean(normal_samples))/mean(normal_samples)
pct_carryover
100*sd(normal_samples)/mean(normal_samples)
t.test(co_samples, normal_samples, mu=40, alternative="less", var.equal=TRUE)
