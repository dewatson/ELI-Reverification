
R version 2.8.1 (2008-12-22)
Copyright (C) 2008 The R Foundation for Statistical Computing
ISBN 3-900051-07-0

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> cR <- read.table("data/cR.dat", header=TRUE)
> attach(cR)
> round(mean(cr0_5),1)
[1] 0.5
> round(sd(cr0_5),2)
[1] 0.04
> round(100*sd(cr0_5)/mean(cr0_5),1)
[1] 9.3
> round(mean(cr300),1)
[1] 256.9
> round(sd(cr300),2)
[1] 4.09
> round(100*sd(cr300)/mean(cr300),1)
[1] 1.6
> low_co_dat <- read.table("data/lowcarryover.dat")
> low_normal_samples <- c(low_co_dat[2:3,1], low_co_dat[10:12,1])
> low_co_samples <- c(low_co_dat[6,1], low_co_dat[9,1], low_co_dat[15,1], low_co_dat[18,1], low_co_dat[21,1])
> low_pct_carryover <- 100*(mean(low_co_samples) - mean(low_normal_samples))/mean(low_normal_samples)
> t.test(low_normal_samples, low_co_samples, mu=0.4, alternative="less", var.equal=TRUE)

	Two Sample t-test

data:  low_normal_samples and low_co_samples 
t = -17.9629, df = 8, p-value = 4.73e-08
alternative hypothesis: true difference in means is less than 0.4 
95 percent confidence interval:
        -Inf 0.005549438 
sample estimates:
mean of x mean of y 
     1.96      2.00 

> round(low_pct_carryover,1)
[1] 2
> round(100*sd(low_normal_samples)/mean(low_normal_samples),1)
[1] 2.8
> high_co_dat <- read.table('data/highcarryover.dat')
> high_normal_samples <- c(high_co_dat[2:3,1], high_co_dat[10:12,1])
> high_co_samples <- c(high_co_dat[6,1], high_co_dat[9,1], high_co_dat[15,1], high_co_dat[18,1], high_co_dat[21,1])
> high_pct_carryover <- 100*(mean(high_co_samples) - mean(high_normal_samples))/mean(high_normal_samples)
> round(high_pct_carryover,1)
[1] -3
> round(100*sd(high_normal_samples)/mean(high_normal_samples),1)
[1] 0
> t.test(high_co_samples, high_normal_samples, mu=0.4, alternative="less", var.equal=TRUE)

	Two Sample t-test

data:  high_co_samples and high_normal_samples 
t = -18.7794, df = 8, p-value = 3.339e-08
alternative hypothesis: true difference in means is less than 0.4 
95 percent confidence interval:
        -Inf -0.01445056 
sample estimates:
mean of x mean of y 
     1.94      2.00 

> ascorbicacid <- read.table('data/ascorbicacid.dat', header=TRUE)
> attach(ascorbicacid)
> Concentration <- Concentration * 100
> aa_fit <- lm(Response ~ Concentration)
> summary(aa_fit)

Call:
lm(formula = Response ~ Concentration)

Residuals:
    Min      1Q  Median      3Q     Max 
-0.8102 -0.3837 -0.2102  0.5939  0.9939 

Coefficients:
              Estimate Std. Error t value Pr(>|t|)    
(Intercept)   1.802041   0.485263   3.714  0.00752 ** 
Concentration 0.002441   0.000074  32.983  6.1e-09 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.7326 on 7 degrees of freedom
Multiple R-squared: 0.9936,	Adjusted R-squared: 0.9927 
F-statistic:  1088 on 1 and 7 DF,  p-value: 6.096e-09 

> aa_cross_reactivity <- 2000 * aa_fit$coef[2]/(20.0 - aa_fit$coef[1])
> round(aa_cross_reactivity,1)
Concentration 
          0.3 
> postscript(file='images/aa.eps', paper="special", width=3.8, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
> par(mar=c(4,2,0,1),las=c(1))
> plot(Concentration, Response, xlab="Ascorbic acid concentration (mg/dL)", ylab="", xlim=c(0,12000), ylim=c(0,30), frame.plot=FALSE,pch=21,col="gray20",bg="gray80",axes=FALSE)
> axis(side=1,at=c(2000,5000,10000))
> axis(side=2)
> abline(aa_fit)
> abline(h=c(2,20),lty=2)
> dev.off()
null device 
          1 
> detach(ascorbicacid)
> rm(Concentration)
> niacin <- read.table('data/niacin.dat', header=TRUE)
> attach(niacin)
> Concentration <- Concentration * 100
> niacin_fit <- lm(Response ~ Concentration)
> summary(niacin_fit)

Call:
lm(formula = Response ~ Concentration)

Residuals:
      Min        1Q    Median        3Q       Max 
-0.105102 -0.005102  0.008163  0.008163  0.096939 

Coefficients:
                Estimate Std. Error t value Pr(>|t|)    
(Intercept)   -0.0193878  0.0502641  -0.386    0.711    
Concentration  0.0010816  0.0000511  21.166 1.32e-07 ***
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 

Residual standard error: 0.07588 on 7 degrees of freedom
Multiple R-squared: 0.9846,	Adjusted R-squared: 0.9824 
F-statistic:   448 on 1 and 7 DF,  p-value: 1.322e-07 

> niacin_cross_reactivity <- 2000* niacin_fit$coef[2]/(20.0 - niacin_fit$coef[1])
> round(niacin_cross_reactivity,1)
Concentration 
          0.1 
> postscript(file='images/b3.eps', paper="special", width=6.4, height=4, horizontal=FALSE, onefile=TRUE, family="Times")
> par(mar=c(4,15,0,1),las=c(1))
> plot(Concentration, Response, xlab="Niacin concentration (mg/dL)", ylab="", xlim=c(0,1800), ylim=c(0,3), frame.plot=FALSE,pch=21,col="gray20",bg="gray80", axes=FALSE)
> axis(side=1,at=c(300,750,1500))
> axis(side=2)
> mtext("Creatinine test response (mg/dL)",side=2,adj=1,at=c(1.5),line=3)
> abline(niacin_fit)
> abline(h=c(2),lty=2)
> dev.off()
null device 
          1 
> rm(Concentration)
> 
> proc.time()
   user  system elapsed 
  1.358   0.052   1.568 
