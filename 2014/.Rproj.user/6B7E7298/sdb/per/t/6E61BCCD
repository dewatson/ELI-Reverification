{
    "contents" : "##\n# cR.R\n#\n# Implements validation methodology for creatinine reverification\n#\n# author    David Watson\n# email     dewatson@icloud.com\n# copyright Copyright (c) 2014, David Watson\n#\n##\n\nsetwd(\"../\")\n# Load common utility functions\nsource(\"bin/common.R\")\n# Record results to an output file\noutFile <- file(\"results/cRvalidation.txt\", open = \"wt\")\nsink(outFile, append = FALSE)\ntimestamp()\n\n# Read in creatinine data and register column names\ncRdata <- read.csv(\"data/cR.csv\",\n                   header = TRUE,\n                   colClasses = \n                     c(\"character\",\"factor\",\"numeric\"))\nattach(cRdata)\n\n# Verify that the sample number, ID, and response are correct\ncat(\"\", \"Creatinine Validation\", \"\", \"Sample Data:\", sep=\"\\n\")\ncRdata\n\n# Calculate the mean, SD, and CV for each level\ncrMeans <- aggregate(Response, by = list(ID), mean)\ncolnames(crMeans) <- c(\"ID\", \"mean\")\ncrStdDev <- aggregate(Response, by = list(ID), stddev)\ncolnames(crStdDev) <- c(\"ID\", \"SD\")\ncrCV <- aggregate(Response, by = list(ID), cv)\ncolnames(crCV) <- c(\"ID\", \"CV\")\n\n# Unregister the cR data\ndetach(cRdata)\n\n# Build a table of the group statistics\ncat(\"\", \"Statistics:\", sep = \"\\n\")\nmerge(merge(crMeans, crStdDev), crCV)\n\n# Read in carryover data and register column names\nlowCOdata <- read.csv(\"data/cRlowCO.csv\",\n                      header = TRUE,\n                      colClasses =\n                        c(\"character\",\"character\",\"numeric\",\"logical\"))\n\n# Verify that the sample number, ID, and response are correct\ncat(\"\", \"Blank carryover data:\", sep = \"\\n\")\nlowCOdata\n\n# Assign the decision point\nDecisionPoint <- 2.0\n\n# Select Armbruster \"normal\" samples\nD_norm <- subset(lowCOdata, Candidate == FALSE, select = Response)\n# Select Armbruster \"carryover candidate\" samples\nD_cc <- subset(lowCOdata, Candidate == TRUE, select = Response)\n# Calculate the carryover\ncat(\"\\n\", \"Carryover (%): \", sep = \"\")\nwrite(carryover(D_cc$Response, D_norm$Response), \"\")\n\n# Calculate the CV of the normal samples\ncat(\"\\n\", \"CV of normal decision point samples: \", sep = \"\")\nwrite(round(100 * sd(D_norm$Response)/ mean(D_norm$Response), 1), \"\")\n\n# Unpaired, two-sample t.test using unequal variance (Welch): check\n# whether the difference in means is <0.4 (20% of the decision level)\nt.test(D_norm$Response,\n       D_cc$Response,\n       mu = 0.2 * DecisionPoint,\n       alternative=\"less\")\n\n# Read in carryover data and register column names\nhighCOdata <- read.csv('data/cRhighCO.csv',\n                       header = TRUE,\n                       colClasses = \n                         c(\"character\",\"character\",\"numeric\",\"logical\"))\n# Verify that the sample number, ID, and response are correct\ncat(\"\", \"High carryover data:\", sep = \"\\n\")\nhighCOdata\n\n# Select Armbruster \"normal\" samples\nD_norm <- subset(highCOdata, Candidate == FALSE, select = Response)\n# Select Armbruster \"carryover candidate\" samples\nD_cc <- subset(highCOdata, Candidate == TRUE, select = Response)\ncat(\"\\n\", \"Carryover (%): \", sep = \"\")\nwrite(carryover(D_cc$Response, D_norm$Response), \"\")\n\n# Calculate the CV of the normal samples\ncat(\"\\n\", \"CV of normal decision point samples: \", sep = \"\")\nwrite(round(100 * sd(D_norm$Response)/ mean(D_norm$Response), 1), \"\")\n\n# Unpaired, two-sample t.test using unequal variance (Welch): check\n# whether the difference in means is <0.4 (20% of the decision level)\nt.test(D_cc$Response,\n       D_norm$Response,\n       mu = 0.2 * DecisionPoint,\n       alternative = \"less\")\n\n# Read in cross-reactivity data\ncrossrx <- read.csv('data/cRCR.csv',\n                    header = TRUE)\n\n# Calculate ascorbic acid cross-reactivity\nascorbicacid <- subset(crossrx,\n                       Analyte == \"ascorbate\",\n                       select = c(Concentration, Response))\nascorbicacid$Concentration <- ascorbicacid$Concentration * 100\nattach(ascorbicacid)\naa_fit <- lm(Response ~ Concentration)\naa_summary <- summary(aa_fit)\naa_cross_reactivity <-\n  100 * 20 * coef(aa_fit)[2]/(20.0 - coef(aa_fit)[1])\ncat(\"\\n\", \"Ascorbic acid cross-reactivity (%): \", sep = \"\")\nwrite(round(as.numeric(aa_cross_reactivity), 1), \"\")\ncat(\"\", \"Ascorbic acid linear regression: \", sep = \"\\n\")\naa_fit$coefficients\ndetach(ascorbicacid)\n\n# Calculate niacin cross-reactivity\nniacin <- subset(crossrx,\n                 Analyte == \"niacin\",\n                 select = c(Concentration, Response))\nniacin$Concentration <- niacin$Concentration * 100\nattach(niacin)\nniacin_fit <- lm(Response ~ Concentration)\nniacin_summary <- summary(niacin_fit)\nniacin_cross_reactivity <-\n  100 * 20 * coef(niacin_fit)[2]/(20.0 - coef(niacin_fit)[1])\ncat(\"\\n\", \"Niacin cross-reactivity (%): \", sep = \"\")\nwrite(round(as.numeric(niacin_cross_reactivity), 1), \"\")\ncat(\"\", \"Niacin linear regression:\", sep = \"\\n\")\nniacin_fit$coefficients\ndetach(niacin)\n\n# Save cross-reactivity data for plots\nsave(ascorbicacid,\n     aa_fit,\n     aa_summary,\n     niacin,\n     niacin_fit,\n     niacin_summary,\n     file=\"data/cRCR.Rdata\"\n)\n\n# Close output redirection and results file\nsink()\nclose(outFile)",
    "created" : 1393451960623.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "499630061",
    "id" : "6E61BCCD",
    "lastKnownWriteTime" : 1393525860,
    "path" : "~/Documents/ELI/Reverification/2014/bin/cR.R",
    "project_path" : "bin/cR.R",
    "properties" : {
        "notebook_author" : "David Watson",
        "notebook_title" : "Creatinine Reverification",
        "notebook_type" : "spin"
    },
    "source_on_save" : false,
    "type" : "r_source"
}