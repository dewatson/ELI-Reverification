{
    "contents" : "Creatinine Reverification\n========================================================\nThis program implements calculations and plotting commands for annual reverification of creatinine screening on the Hitachi 717 automated chemistry analyzer.  \n \n**Author** David Watson  \n**email** [dewatson@icloud.com](mailto:dewatson@icloud.com)  \n**Copyright** (c) 2014, David Watson  \n  \nAnalysis began:\n```{r timestamp began, echo = FALSE, comment = \"\"}\ntimestamp()\n```\nReverification of LoQ, ULoL\n---\n```{r common utilities, echo = FALSE}\n# Load custom SD, CV, and carryover functions; configure plots.\nsource(\"bin/common.R\")\nlibrary(\"ggplot2\")\n```\n```{r load cR data, echo = FALSE}\n# Read in creatinine data and register column names:\ncRdata <- read.csv(\"data/cR.csv\",\n                   header = TRUE,\n                   colClasses = \n                     c(\"character\",\"factor\",\"numeric\"))\nattach(cRdata)\n```\n### Sample table\n```{r check cR data, echo = FALSE, comment = \"\"}\ncRdata\n```\n#### Mean, SD, and CV for each level\n```{r statistics, echo = FALSE, comment = \"\"}\ncrMeans <- aggregate(Response, by = list(ID), mean)\ncolnames(crMeans) <- c(\"ID\", \"mean\")\ncrStdDev <- aggregate(Response, by = list(ID), stddev)\ncolnames(crStdDev) <- c(\"ID\", \"SD\")\ncrCV <- aggregate(Response, by = list(ID), cv)\ncolnames(crCV) <- c(\"ID\", \"CV\")\nmerge(merge(crMeans, crStdDev), crCV)\n```\n```{r cleanup cR data, echo = FALSE}\n#Unregister the cR data:\ndetach(cRdata)\n```\n---\nBlank carryover analysis\n---\n```{r set decision point low carryover, echo = FALSE}\nDecisionPoint <- 2.0\n```\n**Note: the decision point for this assay is `r DecisionPoint`**\n```{r load blank carryover data, echo = FALSE}\n# Read in carryover data:\nlowCOdata <- read.csv(\"data/cRlowCO.csv\",\n                      header = TRUE,\n                      colClasses =\n                        c(\"character\",\"character\",\"numeric\",\"logical\"))\n```\n### Sample table\n```{r verify blank carryover data, echo = FALSE, comment = \"\"}\nlowCOdata\n```\n```{r blank carryover treatments, echo = FALSE}\n# Select Armbruster \"normal\" and \"carryover candidate\" samples:\nD_normal <- subset(lowCOdata, Candidate == FALSE, select = Response)\ncolnames(D_normal) <- c(\"D_N\")\nattach(D_normal)\nD_candidate <- subset(lowCOdata, Candidate == TRUE, select = Response)\ncolnames(D_candidate) <- c(\"D_cc\")\nattach(D_candidate)\n```\nCarryover (%):\n```{r print low carryover, echo = FALSE, comment = \"\"}\nwrite(carryover(D_cc, D_N), \"\")\n```\nCV (%) of normal decision point samples: \n```{r print low CV, echo = FALSE, comment = \"\"}\nwrite(round(100 * sd(D_N)/ mean(D_N), 1), \"\")\n```\nAn unpaired, two-sample *t*-test using unequal variance (Welch) is used to check\nwhether the difference in means is < `r 0.2 * DecisionPoint` (20% of the decision point)\n```{r blank carryover t-test, echo = FALSE, comment = \"\"}\nt.test(D_N,\n       D_cc,\n       mu = 0.2 * DecisionPoint,\n       alternative=\"less\")\ndetach(D_normal)\ndetach(D_candidate)\n```\n---\nHigh carryover analysis\n---\n```{r set decision point high carryover, echo = FALSE}\nDecisionPoint <- 2.0\n```\n**Note: the decision point for this assay is `r DecisionPoint`**\n```{r load high carryover data, echo = FALSE}\nhighCOdata <- read.csv('data/cRhighCO.csv',\n                       header = TRUE,\n                       colClasses = \n                         c(\"character\",\"character\",\"numeric\",\"logical\"))\n```\n### Sample table\n```{r verify high carryover data, echo = FALSE, comment = \"\"}\nhighCOdata\n```\n```{r assign high carryover treatments, echo = FALSE}\n#Select Armbruster \"normal\" and \"carryover candidate\" samples:\nD_normal <- subset(highCOdata, Candidate == FALSE, select = Response)\ncolnames(D_normal) <- c(\"D_N\")\nattach(D_normal)\nD_candidate <- subset(highCOdata, Candidate == TRUE, select = Response)\ncolnames(D_candidate) <- c(\"D_cc\")\nattach(D_candidate)\n```\nCarryover (%): \n```{r print high carryover, echo = FALSE, comment = \"\"}\nwrite(carryover(D_cc, D_N), \"\")\n```\nCV (%) of normal decision point samples:\n```{r print high CV, echo = FALSE, comment = \"\"}\nwrite(round(100 * sd(D_N)/ mean(D_N), 1), \"\")\n```\nAn unpaired, two-sample *t*-test using unequal variance (Welch) is used to check whether the difference in means is < `r 0.2 * DecisionPoint` (20% of the decision point)\n```{r high carryover t-test, echo = FALSE, comment = \"\"}\nt.test(D_cc,\n       D_N,\n       mu = 0.2 * DecisionPoint,\n       alternative = \"less\")\ndetach(D_normal)\ndetach(D_candidate)\n```\n---\nCross-reactivity analysis\n---\n### Sample Table\n```{r load cross-reactivity data, echo = FALSE, comment = \"\"}\ncrossrx <- read.csv('data/cRCR.csv',\n                    header = TRUE)\ncrossrx\n```\n### Ascorbic acid cross-reactivity\n```{r calculate ascorbic acid cross-reactivity, echo = FALSE}\nascorbicacid <- subset(crossrx,\n                       Analyte == \"ascorbate\",\n                       select = c(Concentration, Response))\nascorbicacid$Concentration <- ascorbicacid$Concentration * 100\nattach(ascorbicacid)\naa_fit <- lm(Response ~ Concentration)\naa_summary <- summary(aa_fit)\naa_cross_reactivity <-\n  100 * 20 * coef(aa_fit)[2]/(20.0 - coef(aa_fit)[1])\n```\nAscorbic acid cross-reactivity (%):\n```{r print ascorbic acid cross-reactivity, echo = FALSE, comment = \"\"}\nwrite(round(as.numeric(aa_cross_reactivity), 1), \"\")\n```\nAscorbic acid linear regression coefficients:\n```{r ascorbic acid regression and plot, echo = FALSE, comment = \"\", warning = FALSE, fig.height = 6, fig.width = 6, dpi = 300}\naa_fit$coefficients\nAAplot <- ggplot(ascorbicacid, aes(x=Concentration, y=Response, xmin = 0, ymin = 0))\nAAplot + \n  geom_point(size=4) + \n  theme_classic(base_size = 18, base_family=\"Myriad Pro\") + \n  geom_abline(intercept = coef(aa_fit)[1], slope = coef(aa_fit)[2], size=2, alpha=0.4) + \n  geom_abline(intercept = 2, slope = 0, linetype=3) +\n  geom_abline(intercept = 20, slope = 0, linetype=3) +  \n  labs(title=\"Ascorbic acid cross-reactivity\", x=\"Concentration (mg/dL)\", y=\"Response (mg/dL)\") + \n  theme(plot.title = element_text(family = \"Myriad Pro Semibold\")) +\n  annotate(\"text\", x = Concentration[3], y = 0, \n           label=paste(\n             \"RSD:  \", \n             round(aa_summary$sigma, digits = 5), \"\\n\",\n             \"r:  \", round(sqrt(aa_summary$r.squared), digits = 5), \"\\n\",\n             \"m:  \", round(coef(aa_fit)[2], digits = 5), \"\\n\",\n             \"b:  \", round(coef(aa_fit)[1], digits = 5),\n             sep=\"\"\n           ),\n           hjust=1, vjust=0)\ndetach(ascorbicacid)\n```\n### Niacin cross-reactivity\n```{r calculate niacin cross-reactivity, echo = FALSE}\nniacin <- subset(crossrx,\n                 Analyte == \"niacin\",\n                 select = c(Concentration, Response))\nniacin$Concentration <- niacin$Concentration * 100\nattach(niacin)\nniacin_fit <- lm(Response ~ Concentration)\nniacin_summary <- summary(niacin_fit)\nniacin_cross_reactivity <-\n  100 * 20 * coef(niacin_fit)[2]/(20.0 - coef(niacin_fit)[1])\n```\nNiacin cross-reactivity (%):\n```{r print niacin cross-reactivity, echo = FALSE, comment = \"\"}\nwrite(round(as.numeric(niacin_cross_reactivity), 1), \"\")\n```  \nNiacin linear regression coefficients:\n```{r niacin regression and plot, echo = FALSE, comment = \"\", warning = FALSE, fig.width = 6, fig.height = 6, dpi = 300}\nniacin_fit$coefficients\nNiacinplot <- ggplot(niacin, aes(x=Concentration, y=Response, xmin = 0, ymin = 0))\nNiacinplot + \n  geom_point(size=4) + \n  theme_classic(base_size = 18, base_family=\"Myriad Pro\") + \n  geom_abline(intercept = coef(niacin_fit)[1], slope = coef(niacin_fit)[2], size=2, alpha=0.4) + \n  geom_abline(intercept = 2, slope = 0, linetype=3) +\n  geom_abline(intercept = 20, slope = 0, linetype=3) +  \n  labs(title=\"Niacin cross-reactivity\", x=\"Concentration (mg/dL)\", y=\"Response (mg/dL)\") + \n  theme(plot.title = element_text(family = \"Myriad Pro Semibold\")) +\n  annotate(\"text\", x = Concentration[3], y = 0, \n           label=paste(\n             \"RSD:  \", \n             round(niacin_summary$sigma, digits = 5), \"\\n\",\n             \"r:  \", round(sqrt(niacin_summary$r.squared), digits = 5), \"\\n\",\n             \"m:  \", round(coef(niacin_fit)[2], digits = 5), \"\\n\",\n             \"b:  \", round(coef(niacin_fit)[1], digits = 5),\n             sep=\"\"\n           ),\n           hjust=1, vjust=0)\ndetach(niacin)\n```\nAnalysis finished:\n```{r timestamp finished, echo = FALSE, comment = \"\"}  \ntimestamp()\n```\n```{r save cross-reactivity data, echo = FALSE}\n# Save cross-reactivity data for plots:\nsave(ascorbicacid,\n     aa_fit,\n     aa_summary,\n     niacin,\n     niacin_fit,\n     niacin_summary,\n     file=\"data/cRCR.Rdata\"\n)\n```\n",
    "created" : 1393529168034.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "701910050",
    "id" : "53EDA8F5",
    "lastKnownWriteTime" : 1393541452,
    "path" : "~/Documents/ELI/Reverification/2014/creatinine.Rmd",
    "project_path" : "creatinine.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}